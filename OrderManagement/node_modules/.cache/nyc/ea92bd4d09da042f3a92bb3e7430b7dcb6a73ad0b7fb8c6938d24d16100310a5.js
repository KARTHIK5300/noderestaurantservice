"use strict";var cov_1qi8j3lluu=function(){var path="C:\\Users\\m1048223\\Documents\\repoNode301\\nodejs301RepoProject\\OrderManagement\\src\\app\\config\\winston.js";var hash="2f2b2ad822ce9b223c599d085cb36a1929c8572e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\m1048223\\Documents\\repoNode301\\nodejs301RepoProject\\OrderManagement\\src\\app\\config\\winston.js",statementMap:{"0":{start:{line:1,column:27},end:{line:1,column:45}},"1":{start:{line:4,column:14},end:{line:18,column:22}},"2":{start:{line:23,column:13},end:{line:29,column:2}},"3":{start:{line:32,column:0},end:{line:36,column:6}},"4":{start:{line:35,column:4},end:{line:35,column:25}},"5":{start:{line:39,column:0},end:{line:39,column:24}}},fnMap:{"0":{name:"write",decl:{start:{line:33,column:18},end:{line:33,column:23}},loc:{start:{line:33,column:43},end:{line:36,column:3}},line:33}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"2f2b2ad822ce9b223c599d085cb36a1929c8572e"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();var winston=(cov_1qi8j3lluu.s[0]++,require("winston"));// define the custom settings for each transport (file, console)
var options=(cov_1qi8j3lluu.s[1]++,{file:{level:"info",// filename: `${appRoot}/logs/app.log`,
handleExceptions:true,json:true,maxsize:5242880,// 5MB
maxFiles:5,colorize:false},console:{level:"debug",handleExceptions:true,json:false,colorize:true}});// instantiate a new Winston Logger with the settings defined above
var logger=(cov_1qi8j3lluu.s[2]++,new winston.createLogger({transports:[new winston.transports.Console(),new winston.transports.File({filename:'combined.log'})],exitOnError:false// do not exit on handled exceptions
}));//options.console
// create a stream object with a 'write' function that will be used by `morgan`
cov_1qi8j3lluu.s[3]++;logger.stream={write:function write(message,encoding){cov_1qi8j3lluu.f[0]++;cov_1qi8j3lluu.s[4]++;// use the 'info' log level so the output will be picked up by both transports (file and console)
logger.info(message);}};cov_1qi8j3lluu.s[5]++;module.exports=logger;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpbnN0b24uanMiXSwibmFtZXMiOlsid2luc3RvbiIsInJlcXVpcmUiLCJvcHRpb25zIiwiZmlsZSIsImxldmVsIiwiaGFuZGxlRXhjZXB0aW9ucyIsImpzb24iLCJtYXhzaXplIiwibWF4RmlsZXMiLCJjb2xvcml6ZSIsImNvbnNvbGUiLCJsb2dnZXIiLCJjcmVhdGVMb2dnZXIiLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsIkZpbGUiLCJmaWxlbmFtZSIsImV4aXRPbkVycm9yIiwic3RyZWFtIiwid3JpdGUiLCJtZXNzYWdlIiwiZW5jb2RpbmciLCJpbmZvIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6ImFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFFQTtBQUNBLElBQUlDLE9BQU8sR0FBRztBQUNaQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsS0FBSyxFQUFFLE1BREg7QUFFSjtBQUNBQyxJQUFBQSxnQkFBZ0IsRUFBRSxJQUhkO0FBSUpDLElBQUFBLElBQUksRUFBRSxJQUpGO0FBS0pDLElBQUFBLE9BQU8sRUFBRSxPQUxMLEVBS2M7QUFDbEJDLElBQUFBLFFBQVEsRUFBRSxDQU5OO0FBT0pDLElBQUFBLFFBQVEsRUFBRSxLQVBOLEVBRE07O0FBVVpDLEVBQUFBLE9BQU8sRUFBRTtBQUNQTixJQUFBQSxLQUFLLEVBQUUsT0FEQTtBQUVQQyxJQUFBQSxnQkFBZ0IsRUFBRSxJQUZYO0FBR1BDLElBQUFBLElBQUksRUFBRSxLQUhDO0FBSVBHLElBQUFBLFFBQVEsRUFBRSxJQUpILEVBVkcsRUFBZDs7OztBQWtCQTtBQUNBLElBQUlFLE1BQU0sR0FBRyxJQUFJWCxPQUFPLENBQUNZLFlBQVosQ0FBeUI7QUFDcENDLEVBQUFBLFVBQVUsRUFBRTtBQUNWLE1BQUliLE9BQU8sQ0FBQ2EsVUFBUixDQUFtQkMsT0FBdkIsRUFEVTtBQUVWLE1BQUlkLE9BQU8sQ0FBQ2EsVUFBUixDQUFtQkUsSUFBdkIsQ0FBNEIsRUFBRUMsUUFBUSxFQUFFLGNBQVosRUFBNUIsQ0FGVSxDQUR3Qjs7QUFLcENDLEVBQUFBLFdBQVcsRUFBRSxLQUx1QixDQUtqQjtBQUxpQixDQUF6QixDQUFiO0FBT0E7QUFDQTtBQUNBTixNQUFNLENBQUNPLE1BQVAsR0FBZ0I7QUFDZEMsRUFBQUEsS0FBSyxFQUFFLGVBQVNDLE9BQVQsRUFBa0JDLFFBQWxCLEVBQTRCO0FBQ2pDO0FBQ0FWLElBQUFBLE1BQU0sQ0FBQ1csSUFBUCxDQUFZRixPQUFaO0FBQ0QsR0FKYSxFQUFoQjs7O0FBT0FHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxtMTA0ODIyM1xcRG9jdW1lbnRzXFxyZXBvTm9kZTMwMVxcbm9kZWpzMzAxUmVwb1Byb2plY3RcXE9yZGVyTWFuYWdlbWVudFxcc3JjXFxhcHBcXGNvbmZpZyIsInNvdXJjZXNDb250ZW50IjpbInZhciB3aW5zdG9uID0gcmVxdWlyZShcIndpbnN0b25cIik7XHJcblxyXG4vLyBkZWZpbmUgdGhlIGN1c3RvbSBzZXR0aW5ncyBmb3IgZWFjaCB0cmFuc3BvcnQgKGZpbGUsIGNvbnNvbGUpXHJcbnZhciBvcHRpb25zID0ge1xyXG4gIGZpbGU6IHtcclxuICAgIGxldmVsOiBcImluZm9cIixcclxuICAgIC8vIGZpbGVuYW1lOiBgJHthcHBSb290fS9sb2dzL2FwcC5sb2dgLFxyXG4gICAgaGFuZGxlRXhjZXB0aW9uczogdHJ1ZSxcclxuICAgIGpzb246IHRydWUsXHJcbiAgICBtYXhzaXplOiA1MjQyODgwLCAvLyA1TUJcclxuICAgIG1heEZpbGVzOiA1LFxyXG4gICAgY29sb3JpemU6IGZhbHNlXHJcbiAgfSxcclxuICBjb25zb2xlOiB7XHJcbiAgICBsZXZlbDogXCJkZWJ1Z1wiLFxyXG4gICAgaGFuZGxlRXhjZXB0aW9uczogdHJ1ZSxcclxuICAgIGpzb246IGZhbHNlLFxyXG4gICAgY29sb3JpemU6IHRydWVcclxuICB9XHJcbn07XHJcblxyXG4vLyBpbnN0YW50aWF0ZSBhIG5ldyBXaW5zdG9uIExvZ2dlciB3aXRoIHRoZSBzZXR0aW5ncyBkZWZpbmVkIGFib3ZlXHJcbnZhciBsb2dnZXIgPSBuZXcgd2luc3Rvbi5jcmVhdGVMb2dnZXIoe1xyXG4gIHRyYW5zcG9ydHM6IFtcclxuICAgIG5ldyB3aW5zdG9uLnRyYW5zcG9ydHMuQ29uc29sZSgpLFxyXG4gICAgbmV3IHdpbnN0b24udHJhbnNwb3J0cy5GaWxlKHsgZmlsZW5hbWU6ICdjb21iaW5lZC5sb2cnIH0pXHJcbiAgXSxcclxuICBleGl0T25FcnJvcjogZmFsc2UgLy8gZG8gbm90IGV4aXQgb24gaGFuZGxlZCBleGNlcHRpb25zXHJcbn0pO1xyXG4vL29wdGlvbnMuY29uc29sZVxyXG4vLyBjcmVhdGUgYSBzdHJlYW0gb2JqZWN0IHdpdGggYSAnd3JpdGUnIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IGBtb3JnYW5gXHJcbmxvZ2dlci5zdHJlYW0gPSB7XHJcbiAgd3JpdGU6IGZ1bmN0aW9uKG1lc3NhZ2UsIGVuY29kaW5nKSB7XHJcbiAgICAvLyB1c2UgdGhlICdpbmZvJyBsb2cgbGV2ZWwgc28gdGhlIG91dHB1dCB3aWxsIGJlIHBpY2tlZCB1cCBieSBib3RoIHRyYW5zcG9ydHMgKGZpbGUgYW5kIGNvbnNvbGUpXHJcbiAgICBsb2dnZXIuaW5mbyhtZXNzYWdlKTtcclxuICB9XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGxvZ2dlcjtcclxuIl19