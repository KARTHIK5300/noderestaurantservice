{"version":3,"sources":["winston.js"],"names":["winston","require","options","file","level","handleExceptions","json","maxsize","maxFiles","colorize","console","logger","createLogger","transports","Console","File","filename","exitOnError","stream","write","message","encoding","info","module","exports"],"mappings":"aAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ;AACAC,IAAAA,gBAAgB,EAAE,IAHd;AAIJC,IAAAA,IAAI,EAAE,IAJF;AAKJC,IAAAA,OAAO,EAAE,OALL,EAKc;AAClBC,IAAAA,QAAQ,EAAE,CANN;AAOJC,IAAAA,QAAQ,EAAE,KAPN,EADM;;AAUZC,EAAAA,OAAO,EAAE;AACPN,IAAAA,KAAK,EAAE,OADA;AAEPC,IAAAA,gBAAgB,EAAE,IAFX;AAGPC,IAAAA,IAAI,EAAE,KAHC;AAIPG,IAAAA,QAAQ,EAAE,IAJH,EAVG,EAAd;;;;AAkBA;AACA,IAAIE,MAAM,GAAG,IAAIX,OAAO,CAACY,YAAZ,CAAyB;AACpCC,EAAAA,UAAU,EAAE;AACV,MAAIb,OAAO,CAACa,UAAR,CAAmBC,OAAvB,EADU;AAEV,MAAId,OAAO,CAACa,UAAR,CAAmBE,IAAvB,CAA4B,EAAEC,QAAQ,EAAE,cAAZ,EAA5B,CAFU,CADwB;;AAKpCC,EAAAA,WAAW,EAAE,KALuB,CAKjB;AALiB,CAAzB,CAAb;AAOA;AACA;AACAN,MAAM,CAACO,MAAP,GAAgB;AACdC,EAAAA,KAAK,EAAE,eAASC,OAAT,EAAkBC,QAAlB,EAA4B;AACjC;AACAV,IAAAA,MAAM,CAACW,IAAP,CAAYF,OAAZ;AACD,GAJa,EAAhB;;;AAOAG,MAAM,CAACC,OAAP,GAAiBb,MAAjB","sourceRoot":"C:\\Users\\m1048223\\Documents\\repoNode301\\nodejs301RepoProject\\OrderManagement\\src\\app\\config","sourcesContent":["var winston = require(\"winston\");\r\n\r\n// define the custom settings for each transport (file, console)\r\nvar options = {\r\n  file: {\r\n    level: \"info\",\r\n    // filename: `${appRoot}/logs/app.log`,\r\n    handleExceptions: true,\r\n    json: true,\r\n    maxsize: 5242880, // 5MB\r\n    maxFiles: 5,\r\n    colorize: false\r\n  },\r\n  console: {\r\n    level: \"debug\",\r\n    handleExceptions: true,\r\n    json: false,\r\n    colorize: true\r\n  }\r\n};\r\n\r\n// instantiate a new Winston Logger with the settings defined above\r\nvar logger = new winston.createLogger({\r\n  transports: [\r\n    new winston.transports.Console(),\r\n    new winston.transports.File({ filename: 'combined.log' })\r\n  ],\r\n  exitOnError: false // do not exit on handled exceptions\r\n});\r\n//options.console\r\n// create a stream object with a 'write' function that will be used by `morgan`\r\nlogger.stream = {\r\n  write: function(message, encoding) {\r\n    // use the 'info' log level so the output will be picked up by both transports (file and console)\r\n    logger.info(message);\r\n  }\r\n};\r\n\r\nmodule.exports = logger;\r\n"]}